From e15f48217cb06e92aaaba61f328aec9d8e906447 Mon Sep 17 00:00:00 2001
From: Dimitry Ishenko <dimitry.ishenko@gmail.com>
Date: Tue, 18 Oct 2022 15:00:30 -0400
Subject: [PATCH 3/5] Enable cling to be built against shared libclang

This is a modified version of the patch by Maxim Cournoyer. Original
patch can be found here:

https://github.com/root-project/cling/pull/433/commits/811f0a575231496318b5e9c9a0ff0ed195b16dc0
---
 CMakeLists.txt                   | 10 +++++++--
 lib/Interpreter/CMakeLists.txt   | 36 ++++++++++++++++++--------------
 lib/MetaProcessor/CMakeLists.txt | 22 ++++++++++++-------
 lib/Utils/CMakeLists.txt         | 34 +++++++++++++++++-------------
 tools/Jupyter/CMakeLists.txt     | 12 ++++++++++-
 tools/driver/CMakeLists.txt      | 17 +++------------
 tools/libcling/CMakeLists.txt    | 34 +++++++++++++++++-------------
 7 files changed, 95 insertions(+), 70 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index b31e6262..3d559f1d 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -23,6 +23,7 @@ if( CMAKE_SOURCE_DIR STREQUAL CMAKE_CURRENT_SOURCE_DIR )
       "--libdir"
       "--includedir"
       "--prefix"
+      "--shared-mode"
       "--src-root")
     execute_process(
       COMMAND ${CONFIG_COMMAND}
@@ -47,7 +48,8 @@ if( CMAKE_SOURCE_DIR STREQUAL CMAKE_CURRENT_SOURCE_DIR )
   list(GET CONFIG_OUTPUT 2 LIBRARY_DIR)
   list(GET CONFIG_OUTPUT 3 INCLUDE_DIR)
   list(GET CONFIG_OUTPUT 4 LLVM_OBJ_ROOT)
-  list(GET CONFIG_OUTPUT 5 MAIN_SRC_DIR)
+  list(GET CONFIG_OUTPUT 5 LLVM_LIB_IS_SHARED)
+  list(GET CONFIG_OUTPUT 6 MAIN_SRC_DIR)
 
   if(NOT MSVC_IDE)
     set(LLVM_ENABLE_ASSERTIONS ${ENABLE_ASSERTIONS}
@@ -433,7 +435,11 @@ macro(add_cling_library name)
   endif()
 
   if(TARGET ${name})
-    target_link_libraries(${name} INTERFACE ${LLVM_COMMON_LIBS})
+      if(LLVM_LIB_IS_SHARED)
+          target_link_libraries(${name} PUBLIC LLVM)
+      else()
+          target_link_libraries(${name} INTERFACE ${LLVM_COMMON_LIBS})
+      endif()
 
     if (NOT LLVM_INSTALL_TOOLCHAIN_ONLY OR ${name} STREQUAL "libcling")
       install(TARGETS ${name}
diff --git a/lib/Interpreter/CMakeLists.txt b/lib/Interpreter/CMakeLists.txt
index 921c773c..1636b00c 100644
--- a/lib/Interpreter/CMakeLists.txt
+++ b/lib/Interpreter/CMakeLists.txt
@@ -6,22 +6,26 @@
 # LICENSE.TXT for details.
 #------------------------------------------------------------------------------
 
-set(LIBS
-  clingUtils
-  clangCodeGen
-  clangDriver
-  clangFrontend
-  clangParse
-  clangSema
-  clangAnalysis
-  clangEdit
-  clangRewrite
-  clangRewriteFrontend
-  clangSerialization
-  clangAST
-  clangBasic
-  clangLex
-)
+if(LLVM_LIB_IS_SHARED)
+  set(LIBS clang-cpp clingUtils)
+else()
+  set(LIBS
+    clingUtils
+    clangCodeGen
+    clangDriver
+    clangFrontend
+    clangParse
+    clangSema
+    clangAnalysis
+    clangEdit
+    clangRewrite
+    clangRewriteFrontend
+    clangSerialization
+    clangAST
+    clangBasic
+    clangLex
+  )
+endif()
 
 set(LLVM_LINK_COMPONENTS
   analysis
diff --git a/lib/MetaProcessor/CMakeLists.txt b/lib/MetaProcessor/CMakeLists.txt
index e753dca3..11f611f2 100644
--- a/lib/MetaProcessor/CMakeLists.txt
+++ b/lib/MetaProcessor/CMakeLists.txt
@@ -10,7 +10,20 @@ set( LLVM_LINK_COMPONENTS
   core
   support
   binaryformat
-)
+  )
+
+if(LLVM_LIB_IS_SHARED)
+  set(LIBS clang-cpp clingInterpreter clingUtils)
+else()
+  set(LIBS
+    clangLex
+    clangAST
+    clangBasic
+
+    clingInterpreter
+    clingUtils
+  )
+endif()
 
 add_cling_library(clingMetaProcessor OBJECT
   Display.cpp
@@ -21,10 +34,5 @@ add_cling_library(clingMetaProcessor OBJECT
   MetaSema.cpp
 
   LINK_LIBS
-  clangLex
-  clangAST
-  clangBasic
-
-  clingInterpreter
-  clingUtils
+  ${LIBS}
 )
diff --git a/lib/Utils/CMakeLists.txt b/lib/Utils/CMakeLists.txt
index 327c9fff..e88f81c2 100644
--- a/lib/Utils/CMakeLists.txt
+++ b/lib/Utils/CMakeLists.txt
@@ -26,21 +26,25 @@ set(LLVM_LINK_COMPONENTS
   ${LLVM_TARGETS_TO_BUILD}
 )
 
-set(LIBS
-  clangCodeGen
-  clangDriver
-  clangFrontend
-  clangParse
-  clangSema
-  clangAnalysis
-  clangEdit
-  clangRewrite
-  clangRewriteFrontend
-  clangSerialization
-  clangAST
-  clangBasic
-  clangLex
-)
+if(LLVM_LIB_IS_SHARED)
+  set(LIBS clang-cpp)
+else()
+  set(LIBS
+    clangCodeGen
+    clangDriver
+    clangFrontend
+    clangParse
+    clangSema
+    clangAnalysis
+    clangEdit
+    clangRewrite
+    clangRewriteFrontend
+    clangSerialization
+    clangAST
+    clangBasic
+    clangLex
+  )
+endif()
 
 find_library(DL_LIBRARY_PATH dl)
 if (DL_LIBRARY_PATH)
diff --git a/tools/Jupyter/CMakeLists.txt b/tools/Jupyter/CMakeLists.txt
index aad5f3f7..e66c1e2a 100644
--- a/tools/Jupyter/CMakeLists.txt
+++ b/tools/Jupyter/CMakeLists.txt
@@ -39,7 +39,16 @@ else()
    endif()
 endif()
 
-set(LIBS
+if(LLVM_LIB_IS_SHARED)
+    set(LIBS
+        clang-cpp
+        clingUserInterface
+        clingMetaProcessor
+        ${INTERPRETER}
+        clingUtils
+    )
+else()
+    set(LIBS
         clangAST
         clangBasic
         clangCodeGen
@@ -55,6 +64,7 @@ set(LIBS
         ${INTERPRETER}
         clingUtils
     )
+endif()
 
 if( LLVM_ENABLE_PIC )
     set(ENABLE_SHARED SHARED)
diff --git a/tools/driver/CMakeLists.txt b/tools/driver/CMakeLists.txt
index 7f8a0b9a..6beea4a9 100644
--- a/tools/driver/CMakeLists.txt
+++ b/tools/driver/CMakeLists.txt
@@ -9,24 +9,13 @@
 # Keep symbols for JIT resolution
 set(LLVM_NO_DEAD_STRIP 1)
 
-if(BUILD_SHARED_LIBS)
-  set(LIBS
-    LLVMSupport
-
-    clangFrontendTool
-
-    clingInterpreter
-    clingMetaProcessor
-    clingUserInterface
-    clingUtils
-  )
+if(LLVM_LIB_IS_SHARED)
+  set(LIBS clang-cpp clingUserInterface)
   add_cling_executable(cling
     cling.cpp
   )
 else()
   set(LIBS
-    LLVMSupport
-
     clangASTMatchers
     clangFrontendTool
 
@@ -38,7 +27,7 @@ else()
     $<TARGET_OBJECTS:obj.clingMetaProcessor>
     $<TARGET_OBJECTS:obj.clingUtils>
   )
-endif(BUILD_SHARED_LIBS)
+endif()
 
 set_target_properties(cling
   PROPERTIES ENABLE_EXPORTS 1)
diff --git a/tools/libcling/CMakeLists.txt b/tools/libcling/CMakeLists.txt
index 143d3bdb..cc1c3f29 100644
--- a/tools/libcling/CMakeLists.txt
+++ b/tools/libcling/CMakeLists.txt
@@ -10,21 +10,25 @@ set(SOURCES
   ADDITIONAL_HEADERS
   )
 
-set(LIBS
-  clangAnalysis
-  clangDriver
-  clangFrontend
-  clangParse
-  clangSema
-  clangAST
-  clangLex
-  clangSerialization
-  clangCodeGen
-  clangBasic
-  clangEdit
-
-  clingUtils
-)
+if(LLVM_LIB_IS_SHARED)
+  set(LIBS clang-cpp)
+else()
+  set(LIBS
+    clangAnalysis
+    clangDriver
+    clangFrontend
+    clangParse
+    clangSema
+    clangAST
+    clangLex
+    clangSerialization
+    clangCodeGen
+    clangBasic
+    clangEdit
+
+    clingUtils
+  )
+endif()
 
 set( LLVM_LINK_COMPONENTS
   analysis
-- 
2.34.1

